{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAAMF,SAASC,cAAc,UAmCnC,SAASE,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAGpBG,EAAO,CAAEJ,WAAUC,S,GAGpBA,E,IA9CPH,EAAIW,UAAUC,IAAI,iBAElBf,EAAKgB,iBAAiB,UACtB,SAAsBC,GACpBA,EAAMC,iBACNf,EAAIgB,aAAa,WAAY,YAK7B,IAJA,IAAMC,EAAaC,OAAOrB,EAAKsB,SAAShB,MAAMiB,OACxCC,EAAOH,OAAOrB,EAAKsB,SAASE,KAAKD,OACjCE,EAASJ,OAAOrB,EAAKsB,SAASG,OAAOF,OAElCG,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAAG,CAElCtB,EAAcsB,EAAI,EADNN,EAAaI,EAAOE,GAE7BC,MAAK,SAAAC,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MACjBuB,EAAA/B,GAASgC,OAAOC,QACd,uBAAwCC,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,OAEhD2B,QAAQC,IAAI,uBAAwCF,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IAE3D6B,OAAM,SAAAP,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MAClBuB,EAAA/B,GAASgC,OAAOM,QACd,sBAAuCJ,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,OAG/C2B,QAAQC,IAAI,sBAAqCF,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IAI7DO,YAAW,WACTb,EAAKqC,QACLlC,EAAImC,gBAAgB,W,GACnBlB,EAAaI,EAAOC,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst btn = document.querySelector('button');\nbtn.classList.add('button-create');\n\nform.addEventListener('submit', onSubmitForm);\nfunction onSubmitForm(event) {\n  event.preventDefault();\n  btn.setAttribute('disabled', 'disabled');\n  const firstDelay = Number(form.elements.delay.value);\n  const step = Number(form.elements.step.value);\n  const amount = Number(form.elements.amount.value);\n\n  for (let i = 0; i < amount; i += 1) {\n    let delay = firstDelay + step * i;\n    createPromise(i + 1, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n\n  setTimeout(() => {\n    form.reset();\n    btn.removeAttribute('disabled');\n  }, firstDelay + step * amount);\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n        // Fulfill\n      } else {\n        reject({ position, delay });\n        // Reject\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$btn","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","classList","add","addEventListener","event","preventDefault","setAttribute","firstDelay","Number","elements","value","step","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","console","log","catch","failure","reset","removeAttribute"],"version":3,"file":"03-promises.f3a99e0c.js.map"}